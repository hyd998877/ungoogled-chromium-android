From: Wengling Chen <feiyu2817@gmail.com>
Date: Tue, 11 Aug 2020 16:07:07 -0400
Subject: Enable experimental ProactivelySwapBrowsingInstance feature

---
 content/common/content_navigation_policy.cc |    2 +-
 content/public/common/content_features.cc   |    2 +-
 2 files changed, 2 insertions(+), 2 deletions(-)

--- a/content/public/common/content_features.cc
+++ b/content/public/common/content_features.cc
@@ -671,7 +671,7 @@ const base::Feature kPrivateNetworkAcces
 // HTTP(S) navigations when the BrowsingInstance doesn't contain any other
 // windows.
 const base::Feature kProactivelySwapBrowsingInstance{
-    "ProactivelySwapBrowsingInstance", base::FEATURE_DISABLED_BY_DEFAULT};
+    "ProactivelySwapBrowsingInstance", base::FEATURE_ENABLED_BY_DEFAULT};
 
 // Fires the `pushsubscriptionchange` event defined here:
 // https://w3c.github.io/push-api/#the-pushsubscriptionchange-event
--- a/content/common/content_navigation_policy.cc
+++ b/content/common/content_navigation_policy.cc
@@ -112,7 +112,7 @@ const base::FeatureParam<ProactivelySwap
     proactively_swap_browsing_instance_level{
         &features::kProactivelySwapBrowsingInstance,
         kProactivelySwapBrowsingInstanceLevelParameterName,
-        ProactivelySwapBrowsingInstanceLevel::kDisabled,
+        ProactivelySwapBrowsingInstanceLevel::kCrossSiteReuseProcess,
         &proactively_swap_browsing_instance_levels};
 
 std::string GetProactivelySwapBrowsingInstanceLevelName(
