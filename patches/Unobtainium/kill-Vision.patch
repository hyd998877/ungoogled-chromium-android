From: thermatk <thermatk@thermatk.com>
Date: Fri, 22 Jun 2018 17:04:43 +0200
Subject: kill Vision

Barcode, face and text detection APIs
---
 services/shape_detection/BUILD.gn                                                                     |    6 --
 services/shape_detection/android/java/src/org/chromium/shape_detection/BitmapUtils.java               |   11 ----
 services/shape_detection/android/java/src/org/chromium/shape_detection/FaceDetectionProviderImpl.java |   10 ----
 services/shape_detection/android/java/src/org/chromium/shape_detection/InterfaceRegistrar.java        |   25 ----------
 4 files changed, 52 deletions(-)

--- a/services/shape_detection/BUILD.gn
+++ b/services/shape_detection/BUILD.gn
@@ -110,14 +110,8 @@ if (is_android) {
 
   android_library("shape_detection_java") {
     sources = [
-      "android/java/src/org/chromium/shape_detection/BarcodeDetectionImpl.java",
-      "android/java/src/org/chromium/shape_detection/BarcodeDetectionProviderImpl.java",
       "android/java/src/org/chromium/shape_detection/BitmapUtils.java",
-      "android/java/src/org/chromium/shape_detection/FaceDetectionImpl.java",
-      "android/java/src/org/chromium/shape_detection/FaceDetectionImplGmsCore.java",
-      "android/java/src/org/chromium/shape_detection/FaceDetectionProviderImpl.java",
       "android/java/src/org/chromium/shape_detection/InterfaceRegistrar.java",
-      "android/java/src/org/chromium/shape_detection/TextDetectionImpl.java",
     ]
 
     deps = [
--- a/services/shape_detection/android/java/src/org/chromium/shape_detection/BitmapUtils.java
+++ b/services/shape_detection/android/java/src/org/chromium/shape_detection/BitmapUtils.java
@@ -6,8 +6,6 @@ package org.chromium.shape_detection;
 
 import android.graphics.Bitmap;
 
-import com.google.android.gms.vision.Frame;
-
 import org.chromium.mojo_base.BigBufferUtil;
 
 import java.nio.ByteBuffer;
@@ -44,13 +42,4 @@ public class BitmapUtils {
         }
     }
 
-    public static Frame convertToFrame(org.chromium.skia.mojom.BitmapN32 bitmapData) {
-        Bitmap bitmap = convertToBitmap(bitmapData);
-        if (bitmap == null) {
-            return null;
-        }
-
-        // This constructor implies a pixel format conversion to YUV.
-        return new Frame.Builder().setBitmap(bitmap).build();
-    }
 }
--- a/services/shape_detection/android/java/src/org/chromium/shape_detection/FaceDetectionProviderImpl.java
+++ b/services/shape_detection/android/java/src/org/chromium/shape_detection/FaceDetectionProviderImpl.java
@@ -5,7 +5,6 @@
 package org.chromium.shape_detection;
 
 import org.chromium.base.ContextUtils;
-import org.chromium.gms.ChromiumPlayServicesAvailability;
 import org.chromium.mojo.bindings.InterfaceRequest;
 import org.chromium.mojo.system.MojoException;
 import org.chromium.shape_detection.mojom.FaceDetection;
@@ -21,15 +20,6 @@ public class FaceDetectionProviderImpl i
     @Override
     public void createFaceDetection(
             InterfaceRequest<FaceDetection> request, FaceDetectorOptions options) {
-        final boolean isGmsCoreSupported =
-                ChromiumPlayServicesAvailability.isGooglePlayServicesAvailable(
-                        ContextUtils.getApplicationContext());
-
-        if (isGmsCoreSupported) {
-            FaceDetection.MANAGER.bind(new FaceDetectionImplGmsCore(options), request);
-        } else {
-            FaceDetection.MANAGER.bind(new FaceDetectionImpl(options), request);
-        }
     }
 
     @Override
--- a/services/shape_detection/android/java/src/org/chromium/shape_detection/InterfaceRegistrar.java
+++ b/services/shape_detection/android/java/src/org/chromium/shape_detection/InterfaceRegistrar.java
@@ -8,9 +8,6 @@ import org.chromium.base.annotations.Cal
 import org.chromium.base.annotations.JNINamespace;
 import org.chromium.mojo.system.MessagePipeHandle;
 import org.chromium.mojo.system.impl.CoreImpl;
-import org.chromium.shape_detection.mojom.BarcodeDetectionProvider;
-import org.chromium.shape_detection.mojom.FaceDetectionProvider;
-import org.chromium.shape_detection.mojom.TextDetection;
 
 @JNINamespace("shape_detection")
 class InterfaceRegistrar {
@@ -20,35 +17,13 @@ class InterfaceRegistrar {
 
     @CalledByNative
     static void bindBarcodeDetectionProvider(int nativeHandle) {
-        // Immediately wrap |nativeHandle| as it cannot be allowed to leak.
-        MessagePipeHandle handle = messagePipeHandleFromNative(nativeHandle);
-
-        BarcodeDetectionProvider impl = BarcodeDetectionProviderImpl.create();
-        if (impl == null) {
-            handle.close();
-            return;
-        }
-
-        BarcodeDetectionProvider.MANAGER.bind(impl, handle);
     }
 
     @CalledByNative
     static void bindFaceDetectionProvider(int nativeHandle) {
-        FaceDetectionProvider.MANAGER.bind(
-                new FaceDetectionProviderImpl(), messagePipeHandleFromNative(nativeHandle));
     }
 
     @CalledByNative
     static void bindTextDetection(int nativeHandle) {
-        // Immediately wrap |nativeHandle| as it cannot be allowed to leak.
-        MessagePipeHandle handle = messagePipeHandleFromNative(nativeHandle);
-
-        TextDetection impl = TextDetectionImpl.create();
-        if (impl == null) {
-            handle.close();
-            return;
-        }
-
-        TextDetection.MANAGER.bind(impl, handle);
     }
 }
